/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import DAO.DaoVendasClienteProduto;
import controller.ControllerCliente;
import controller.ControllerProdutos;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerVendas;
import controller.ControllerVendasCliente;
import controller.ControllerVendasProdutos;
import java.io.FileNotFoundException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelCliente;
import model.ModelProdutos;
import model.ModelProdutosVendasProdutos;
import model.ModelVendaClienteProduto;
import model.ModelVendas;
import model.ModelVendasCliente;
import model.ModelVendasProdutos;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import util.ImprimirLista;
import util.SanDatas;


/**
 *
 * @author Usuario
 */
public class ViewVendas extends javax.swing.JFrame {

    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelCliente = new ArrayList<>();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ModelProdutos modelProdutos = new ModelProdutos();
    ArrayList<ModelProdutos> listaModelProdutoses = new ArrayList<>();
    ArrayList<ModelVendasCliente> listaModelVendasClientes = new ArrayList<>();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    ControllerVendas controllerVendas = new ControllerVendas();
    ModelVendas modelVendas = new ModelVendas();
    SanDatas sanDatas = new SanDatas();
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelVendasProdutos modelVendasProdutos = new ModelVendasProdutos();
    ArrayList<ModelVendasProdutos> listaModelVendasProdutoses = new ArrayList<>();
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutoses = new ArrayList<>();
    String alterarSalvar = "salvar";
    ArrayList<ModelVendaClienteProduto> listarVendasClienteProduto = new ArrayList<>();
    ModelVendaClienteProduto modelVendaClienteProduto = new ModelVendaClienteProduto();

    /**
     * Creates new form ViewVendas
     */
    public ViewVendas() {
        initComponents();
        listarClientes();
        listarProdutos();
        setLocationRelativeTo(null);
        carregarVendas();
        preencherCodigoPeloCombobox();
        preencherCodigoProdutoPeloComboBox();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *
     *
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbImprimir = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jtfCodigoCliente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfNumVenda = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfCodigoProduto = new javax.swing.JTextField();
        jtfQuantidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jbAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableProdutosVenda = new javax.swing.JTable();
        jbCancelar = new javax.swing.JButton();
        jbExcluirProduto = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jtfValorTotal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfDesconto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jcbNomeProduto = new componentes.UJComboBox();
        jcbNomeCliente = new componentes.UJComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jtfPesquisa = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtVendas = new javax.swing.JTable();
        jbEditar = new javax.swing.JButton();
        jbExcluirVenda = new javax.swing.JButton();
        jbImprimir1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jtfImprimirVenda = new javax.swing.JTextField();

        jbImprimir.setText("Imprimir Venda!");
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vendas");

        jtfCodigoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoClienteFocusLost(evt);
            }
        });
        jtfCodigoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoClienteActionPerformed(evt);
            }
        });

        jLabel1.setText("Cód. Cliente:");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Imagens 15x15/cliente.png.png"))); // NOI18N
        jLabel2.setText("Nome do Cliente:");

        jLabel3.setText("Número da Venda:");

        jLabel4.setText("Cód. Produto:");

        jtfCodigoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoProdutoFocusLost(evt);
            }
        });
        jtfCodigoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoProdutoActionPerformed(evt);
            }
        });

        jLabel5.setText("Quantidade:");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Imagens 15x15/produtos.png.png"))); // NOI18N
        jLabel6.setText("Nome do Produto:");

        jbAdicionar.setText("Adicionar");
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jtableProdutosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código do Produto", "Nome do Produto", "Quantidade", "Valor Un.", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableProdutosVenda.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(jtableProdutosVenda);

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Imagens 15x15/cancelar.png.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluirProduto.setText("Excluir");
        jbExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirProdutoActionPerformed(evt);
            }
        });

        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Imagens 15x15/novo.png.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Imagens 15x15/salvar.png.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jLabel7.setText("Valor Total:");

        jtfDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescontoFocusLost(evt);
            }
        });

        jLabel8.setText("Desconto:");

        jcbNomeProduto.setAutocompletar(true);
        jcbNomeProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbNomeProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jcbNomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNomeProdutoActionPerformed(evt);
            }
        });

        jcbNomeCliente.setAutocompletar(true);
        jcbNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNomeClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfCodigoCliente))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(jcbNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jtfNumVenda)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(0, 241, Short.MAX_VALUE))
                                            .addComponent(jcbNomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jbAdicionar))
                                            .addComponent(jLabel5)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 99, Short.MAX_VALUE)
                        .addComponent(jbSalvar)
                        .addGap(40, 40, 40)
                        .addComponent(jbNovo)
                        .addGap(50, 50, 50)
                        .addComponent(jbExcluirProduto)
                        .addGap(47, 47, 47)
                        .addComponent(jbCancelar)
                        .addGap(98, 98, 98))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAdicionar)
                    .addComponent(jcbNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar)
                    .addComponent(jbExcluirProduto)
                    .addComponent(jbNovo)
                    .addComponent(jbSalvar))
                .addGap(16, 16, 16))
        );

        jTabbedPane1.addTab("Cadastro", jPanel1);

        jLabel9.setText("Pesquisa:");

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jtVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome do Cliente", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtVendas);

        jbEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Imagens 15x15/alterar.png.png"))); // NOI18N
        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluirVenda.setText("Excluir");
        jbExcluirVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirVendaActionPerformed(evt);
            }
        });

        jbImprimir1.setText("Imprimir Venda!");
        jbImprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimir1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Número da Venda:");

        jtfImprimirVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfImprimirVendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jbPesquisar)))
                        .addGap(0, 175, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jbImprimir1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbEditar)
                .addGap(45, 45, 45)
                .addComponent(jbExcluirVenda)
                .addGap(29, 29, 29))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfImprimirVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfImprimirVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEditar)
                    .addComponent(jbExcluirVenda)
                    .addComponent(jbImprimir1))
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Consultar/Excluir/Alterar", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCodigoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoProdutoActionPerformed

    private void jtfCodigoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoClienteActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jtfCodigoClienteActionPerformed

    private void jtfCodigoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoClienteFocusLost
        // TODO add your handling code here:
        modelCliente = controllerCliente.getClienteController(Integer.parseInt(jtfCodigoCliente.getText()));
        jcbNomeCliente.setSelectedItem(modelCliente.getCliNome());

    }//GEN-LAST:event_jtfCodigoClienteFocusLost

    private void jtfCodigoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoFocusLost
        // TODO add your handling code here:
        modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(jtfCodigoProduto.getText()));
        jcbNomeProduto.setSelectedItem(modelProdutos.getProNome());
    }//GEN-LAST:event_jtfCodigoProdutoFocusLost

    private void jbExcluirVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirVendaActionPerformed
        // TODO add your handling code here:
        int linha = jtVendas.getSelectedRow();
        int codigoVenda = (int) jtVendas.getValueAt(linha, 0);
        listaModelProdutoses = new ArrayList<>();
        listaModelProdutosVendasProdutoses = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        for (int i = 0; i < listaModelProdutosVendasProdutoses.size(); i++) {
            modelProdutos = new ModelProdutos();
            modelProdutos.setIdProduto(listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getIdProduto());
            modelProdutos.setProEstoque(
                    (int) (listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getProEstoque()
                    + listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade()));
            listaModelProdutoses.add(modelProdutos);
        }
        if (controllerProdutos.alterarEstoqueProdutoController(listaModelProdutoses)) {
            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
            if (controllerVendas.excluirVendasController(codigoVenda)) {
                JOptionPane.showMessageDialog(this, "Venda excluída com sucesso.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir a venda", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExcluirVendaActionPerformed

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        // TODO add your handling code here:

        if (jtfQuantidade.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Você deve preencher TODOS os campos", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else {
            modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(jtfCodigoProduto.getText()));
            // adiciona uma linha na tabela
            DefaultTableModel modelo = (DefaultTableModel) jtableProdutosVenda.getModel();
            int cont = 0;
            double quantidade = 0;
            quantidade = Double.parseDouble(jtfQuantidade.getText());
            for (int i = 0; 1 < cont; i++) {
                modelo.setNumRows(0);
            }

            modelo.addRow(new Object[]{
                modelProdutos.getIdProduto(),
                modelProdutos.getProNome(),
                jtfQuantidade.getText(),
                modelProdutos.getProValor(),
                quantidade * modelProdutos.getProValor()
            });
            somarValorTotalProdutos();
        }
    }//GEN-LAST:event_jbAdicionarActionPerformed


    private void jtfDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescontoFocusLost
        // TODO add your handling code here:
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtfDescontoFocusLost

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        // TODO add your handling code here:
        jbSalvar.setEnabled(true);
        alterarSalvar = "salvar";
        limparFormulario();
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirProdutoActionPerformed
        // TODO add your handling code here:
        int linha = jtableProdutosVenda.getSelectedRow();
        if (linha != -1) {
            DefaultTableModel model = (DefaultTableModel) jtableProdutosVenda.getModel();
            model.removeRow(linha);
            somarValorTotalProdutos();
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um item para excluir.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jbExcluirProdutoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:

        int codigoVenda = 0;
        int codigoProduto = 0;
        double desconto = 0;
        int linha = 0;

        listaModelVendasProdutoses = new ArrayList<>();

        if (jtfDesconto.getText().equals("")) {
            desconto = 0;
        } else {
            desconto = Double.parseDouble(jtfDesconto.getText());
        }

        if (!jtfNumVenda.getText().equals("")) {
            modelVendas.setIdVendas(Integer.parseInt(jtfNumVenda.getText()));
        }

        modelVendas.setCliente((Integer.parseInt(jtfCodigoCliente.getText())));
        try {
            modelVendas.setVenDataVenda(sanDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception e) {
        }
        modelVendas.setVenValorLiquido(Double.parseDouble(jtfValorTotal.getText()));
        modelVendas.setVenValorBruto(Double.parseDouble(jtfValorTotal.getText()) + desconto);

        modelVendas.setVenDesconto(desconto);

        if (alterarSalvar.equals("salvar")) {
            //salva
            codigoVenda = controllerVendas.salvarVendasController(modelVendas);
            if (codigoVenda > 0) {
                JOptionPane.showMessageDialog(this, "Venda salva com sucesso.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar a venda", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            int cont = jtableProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) Integer.parseInt(jtableProdutosVenda.getValueAt(i, 0).toString());
                modelVendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setVendas(codigoVenda);
                modelVendasProdutos.setVenProValor((double) jtableProdutosVenda.getValueAt(i, 3));
                modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jtableProdutosVenda.getValueAt(i, 2).toString()));

                //produto
                modelProdutos.setIdProduto(codigoProduto);
                modelProdutos.setProEstoque(controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()
                        - Integer.parseInt(jtableProdutosVenda.getValueAt(i, 2).toString()));
                listaModelVendasProdutoses.add(modelVendasProdutos);
                listaModelProdutoses.add(modelProdutos);
            }
            //salvar os produtos da venda
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutoses)) {
                //alterar o estoque de produtos
                controllerProdutos.alterarEstoqueProdutoController(listaModelProdutoses);
                //     JOptionPane.showMessageDialog(this, "Produtos da venda salvos com sucesso.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                carregarVendas();
                limparFormulario();

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar os produtos da venda", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            //altera
            // INICIO RETORNAR PARA O ESTOQUE PRODUTOS DA VENDA
            linha = jtVendas.getSelectedRow();
            if (linha >= 0) {
                codigoVenda = (int) jtVendas.getValueAt(linha, 0);
                listaModelProdutoses = new ArrayList<>();

                listaModelProdutosVendasProdutoses = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
                for (int i = 0; i < listaModelProdutosVendasProdutoses.size(); i++) {
                    modelProdutos = new ModelProdutos();
                    modelProdutos.setIdProduto(listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getIdProduto());
                    modelProdutos.setProEstoque(
                            (int) (listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getProEstoque()
                            + listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade()));
                    listaModelProdutoses.add(modelProdutos);
                }
                if (controllerProdutos.alterarEstoqueProdutoController(listaModelProdutoses)) {
                    if (controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)) {
                        // JOptionPane.showMessageDialog(this, "Venda excluída com sucesso.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                        this.carregarVendas();
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao excluir a venda", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir a venda", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
                // FIM RETORNAR PARA O ESTOQUE PRODUTOS DA VENDA

                if (controllerVendas.atualizarVendasController(modelVendas)) {
                    JOptionPane.showMessageDialog(this, "Venda alterada com sucesso.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao alterar a venda", "ERROR", JOptionPane.ERROR_MESSAGE);
                }

                //Adicionar produtos na lista para salvar.
                int cont = jtableProdutosVenda.getRowCount();
                for (int i = 0; i < cont; i++) {
                    codigoProduto = (int) jtableProdutosVenda.getValueAt(i, 0);
                    modelVendasProdutos = new ModelVendasProdutos();
                    modelProdutos = new ModelProdutos();
                    modelVendasProdutos.setProduto(codigoProduto);
                    modelVendasProdutos.setVendas(codigoVenda);
                    modelVendasProdutos.setVenProValor((double) jtableProdutosVenda.getValueAt(i, 3));
                    modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jtableProdutosVenda.getValueAt(i, 2).toString()));

                    //produto
                    modelProdutos.setIdProduto(codigoProduto);
                    modelProdutos.setProEstoque(controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()
                            - Integer.parseInt(jtableProdutosVenda.getValueAt(i, 2).toString()));
                    listaModelVendasProdutoses.add(modelVendasProdutos);
                    listaModelProdutoses.add(modelProdutos);
                }

                //salvar os produtos da venda
                if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutoses)) {
//                    JOptionPane.showMessageDialog(this, "Produtos da venda salvos com sucesso.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                    carregarVendas();
                    limparFormulario();

                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao salvar os produtos da venda", "ERROR", JOptionPane.ERROR_MESSAGE);

                }

            }
            jbSalvar.setEnabled(false);
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        // TODO add your handling code here:
        String nomeCliente;
        int codigoCliente;

        jbSalvar.setEnabled(true);
        alterarSalvar = "alterar";
        int linha = jtVendas.getSelectedRow();
        int codigoVenda = (int) jtVendas.getValueAt(linha, 0);
        listaModelProdutosVendasProdutoses = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        DefaultTableModel modelo = (DefaultTableModel) jtableProdutosVenda.getModel();
        modelo.setNumRows(0);

        // Obtém os dados do cliente associado à venda selecionada
        nomeCliente = listaModelVendasClientes.get(linha).getModelCliente().getCliNome();
        codigoCliente = listaModelVendasClientes.get(linha).getModelCliente().getIdCliente();

        jtfCodigoCliente.setText(String.valueOf(codigoCliente));
        jcbNomeCliente.setSelectedItem(nomeCliente);

        for (int i = 0; i < listaModelProdutosVendasProdutoses.size(); i++) {
            jtfNumVenda.setText(String.valueOf(listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVendas()));
            modelo.addRow(new Object[]{
                listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getIdProduto(),
                listaModelProdutosVendasProdutoses.get(i).getModelProdutos().getProNome(),
                listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade(),
                listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProValor(),
                listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProQuantidade()
                * listaModelProdutosVendasProdutoses.get(i).getModelVendasProdutos().getVenProValor()

            });
        }
        somarValorTotalProdutos();
        jTabbedPane1.setSelectedIndex(0);

    }//GEN-LAST:event_jbEditarActionPerformed

    private void jcbNomeProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbNomeProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcbNomeProduto.isVisible()) {
            modelProdutos = controllerProdutos.retornarProdutoController(jcbNomeProduto.getSelectedItem().toString());
            jtfCodigoProduto.setText(String.valueOf(modelProdutos.getIdProduto()));
            preencherCodigoProdutoPeloComboBox();
        }
        {

        }
    }//GEN-LAST:event_jcbNomeProdutoPopupMenuWillBecomeInvisible

    private void jcbNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNomeClienteActionPerformed
        // TODO add your handling code here:
        if (jcbNomeCliente.isPopupVisible()) {
            preencherCodigoPeloCombobox();
        }
    }//GEN-LAST:event_jcbNomeClienteActionPerformed

    private void jcbNomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNomeProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbNomeProdutoActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) this.jtVendas.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.jtVendas.setRowSorter(classificador);
        String texto = jtfPesquisa.getText();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));

    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        jbSalvar.setEnabled(false);
        limparFormulario();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jbImprimirActionPerformed

    private void jbImprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimir1ActionPerformed
       
try {
            int numeroVenda = Integer.parseInt(jtfImprimirVenda.getText());
            gerarRelatorioVenda(numeroVenda);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Por favor, digite um número válido.");
        }

            

    }//GEN-LAST:event_jbImprimir1ActionPerformed

    private void jtfImprimirVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfImprimirVendaActionPerformed
        // TODO add your handling code here:
        
        

    }//GEN-LAST:event_jtfImprimirVendaActionPerformed

 private void gerarRelatorioVenda(int numeroVenda) {
    try {
        if (numeroVenda <= 0) {
            JOptionPane.showMessageDialog(null, "Por favor, digite um número de venda válido.");
            return;
        }

        // Aqui você pode usar o número da venda para obter os detalhes da venda
        ModelVendaClienteProduto venda = obterDetalhesDaVenda(numeroVenda);

        if (venda != null) {
            ArrayList<ModelVendaClienteProduto> listaImprimir = new ArrayList<>();
            venda.setVenDataVendaFormatada(new SimpleDateFormat("dd/MM/yyyy").format(venda.getVenDataVenda()));
            listaImprimir.add(venda);

            JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(listaImprimir);
            JasperReport caminhoRelatorio = JasperCompileManager.compileReport("src/resources/Sansoft.jrxml");
            JasperPrint print = JasperFillManager.fillReport(caminhoRelatorio, null, dataSource);
            JasperViewer.viewReport(print, false);
        } else {
            JOptionPane.showMessageDialog(null, "Venda não encontrada.");
        }

    } catch (JRException e) {
        e.printStackTrace();
    }
}

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVendas().setVisible(true);
            }
        });
    }

    /**
     * preenche o combobox c todos os clientes.
     */
    private void listarClientes() {
        listaModelCliente = controllerCliente.getListaClienteCOntroller();
        jcbNomeCliente.removeAllItems();
        for (int i = 0; i < listaModelCliente.size(); i++) {
            jcbNomeCliente.addItem(listaModelCliente.get(i).getCliNome());
        }

    }

    /**
     * preenche o combobox c todos os produtos.
     */
    private void listarProdutos() {
        listaModelProdutoses = controllerProdutos.retornarListaProdutoController();
        jcbNomeProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutoses.size(); i++) {
            jcbNomeProduto.addItem(listaModelProdutoses.get(i).getProNome());

        }
    }

    private void carregarVendas() {
        DefaultTableModel modelo = (DefaultTableModel) jtVendas.getModel();
        listaModelVendasClientes = controllerVendasCliente.getListaVendasClienteController();
        int cont = listaModelVendasClientes.size();
        modelo.setNumRows(0);
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelVendasClientes.get(i).getModelVendas().getIdVendas(),
                listaModelVendasClientes.get(i).getModelCliente().getCliNome(),
                listaModelVendasClientes.get(i).getModelVendas().getVenDataVenda()
            });

        }

    }

    /**
     * soma todos os produtos da venda.
     */
    private void somarValorTotalProdutos() {
        double soma = 0, valor;
        int cont = jtableProdutosVenda.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = (double) jtableProdutosVenda.getValueAt(i, 4);
            soma = soma + valor;
        }
        jtfValorTotal.setText(String.valueOf(soma));
        aplicarDescontos();
    }

    /**
     * aplica desconto ao valor final da venda
     */
    private void aplicarDescontos() {

        try {
            // Obtém o valor total e o desconto em porcentagem

            double valorTotal = Double.parseDouble(jtfValorTotal.getText());

            String descontoText = jtfDesconto.getText();

            // Verifica se o campo de desconto não está vazio
            if (!descontoText.isEmpty()) {
                double descontoPorcentagem = Double.parseDouble(descontoText);
                double desconto = (descontoPorcentagem / 100) * valorTotal;
                double valorComDesconto = valorTotal - desconto;

                // Atualiza o campo de valor total com o desconto aplicado
                jtfValorTotal.setText(String.valueOf(valorComDesconto));
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, insira valores numéricos válidos.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void preencherCodigoPeloCombobox() {
        modelCliente = controllerCliente.getClienteController(jcbNomeCliente.getSelectedItem().toString());
        jtfCodigoCliente.setText(String.valueOf(modelCliente.getIdCliente()));
    }

    private void preencherCodigoProdutoPeloComboBox() {
        Object selectedItem = jcbNomeProduto.getSelectedItem();
        if (selectedItem != null) {
            modelProdutos = controllerProdutos.retornarProdutoController(selectedItem.toString());
            jtfCodigoProduto.setText(String.valueOf(modelProdutos.getIdProduto()));
        } else {
            // Caso nenhum item esteja selecionado, você pode optar por tratar isso de alguma forma.
            // Por exemplo, exibir uma mensagem para o usuário.
            JOptionPane.showMessageDialog(this, "Nenhum produto selecionado.", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * limpa formulario de tabela
     */
    private void limparFormulario() {
        jtfQuantidade.setText("");
        jtfDesconto.setText("");
        jtfValorTotal.setText("");
        jtfNumVenda.setText("");
        DefaultTableModel modelo = (DefaultTableModel) jtableProdutosVenda.getModel();
        modelo.setNumRows(0);

    }
 private ModelVendaClienteProduto obterDetalhesDaVenda(int codigoVenda) {
        DaoVendasClienteProduto dao = new DaoVendasClienteProduto();
        return dao.obterDetalhesDaVenda(codigoVenda);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluirProduto;
    private javax.swing.JButton jbExcluirVenda;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbImprimir1;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbSalvar;
    private componentes.UJComboBox jcbNomeCliente;
    private componentes.UJComboBox jcbNomeProduto;
    private javax.swing.JTable jtVendas;
    private javax.swing.JTable jtableProdutosVenda;
    private javax.swing.JTextField jtfCodigoCliente;
    private javax.swing.JTextField jtfCodigoProduto;
    private javax.swing.JTextField jtfDesconto;
    private javax.swing.JTextField jtfImprimirVenda;
    private javax.swing.JTextField jtfNumVenda;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfQuantidade;
    private javax.swing.JTextField jtfValorTotal;
    // End of variables declaration//GEN-END:variables

    
}
